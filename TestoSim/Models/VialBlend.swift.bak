import Foundation

// Temporary implementation to resolve cyclic import issues
struct VialBlend: Identifiable, Codable, Hashable {
    struct Component: Codable, Hashable {
        let compoundID: UUID
        let mgPerML: Double
        
        init(compoundID: UUID, mgPerML: Double) {
            self.compoundID = compoundID
            self.mgPerML = mgPerML
        }
    }
    
    let id: UUID
    var name: String
    var manufacturer: String?
    var description: String?
    var components: [Component]
    
    init(id: UUID = UUID(), 
         name: String, 
         manufacturer: String? = nil, 
         description: String? = nil, 
         components: [Component]) {
        self.id = id
        self.name = name
        self.manufacturer = manufacturer
        self.description = description
        self.components = components
    }
    
    // Total concentration in mg/mL
    var totalConcentration: Double {
        components.reduce(0) { $0 + $1.mgPerML }
    }
    
    // Basic implementation to avoid compilation errors
    func compositionDescription(using library: Any) -> String {
        return "Blend: \(name)"
    }
}